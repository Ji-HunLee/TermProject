import cv2
import numpy as np
from imageai.Detection import VideoObjectDetection
import os
import time

start = time.time()

cap = cv2.VideoCapture('videos/sample1.mp4')
width = int(cap.get(cv2.CAP_PROP_FRAME_WIDTH))
height = int(cap.get(cv2.CAP_PROP_FRAME_HEIGHT))

fourcc = cv2.VideoWriter_fourcc(*'XVID')
fps = 30

writer = cv2.VideoWriter('videos/sample1_opening.mp4', fourcc, fps, (width, height))
kernel = np.ones((2,2), np.uint8)

num = 0
while True:
    ret,img = cap.read()
    num += 1
    
    if ret == False:
        break
    
    if num % 3 != 0:
        #img_blur = cv2.GaussianBlur(img_gray, (3, 3), 0)
        img_opening = cv2.morphologyEx(img, cv2.MORPH_OPEN, kernel)
        writer.write(img_opening)
        
        
cap.release()
writer.release()
cv2.destroyAllWindows()

################yolo적용############
execution_path = os.getcwd()

detector = VideoObjectDetection()
detector.setModelTypeAsYOLOv3()
detector.setModelPath( os.path.join(execution_path , "models/yolo.h5"))
detector.loadModel()

video_path = detector.detectObjectsFromVideo(
    input_file_path=os.path.join(execution_path, "videos/sample1_opening.mp4"),
    output_file_path=os.path.join(execution_path, "videos/sample1_opening_YOLO"),
    frames_per_second=30, log_progress=True)
print(video_path)

print(time.time() - start)
